version: "3.1"


services:
  api_gate:
    build:
      context: ./apiGate
      dockerfile: Dockerfile
    environment:
      PORT: '8081'
    ports:
      - '8081:8081'


  auth_service:
    build:
      context: ./AuthService
      dockerfile: Dockerfile
    environment:
      AUTH_PORT: '8001'
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: authdatabase
      # POSTGRES_HOST: localhost
      POSTGRES_HOST: 127.0.0.1
      POSTGRES_PORT: 5432
    ports:
      - '8001:8001'
    depends_on:
      - postgres

  postgres:
    image: postgres
    volumes:
      - /home/GolandProjects/posgres/:/posgres/data
    container_name: db
    restart: on-failure
    ports:
      - '5432:5432'
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: authdatabase
      # POSTGRES_HOST: localhost
      POSTGRES_HOST: 127.0.0.1
      POSTGRES_PORT: 5432
    healthcheck:
      test: echo 'db.runCommand("ping").ok'
      interval: 10s
      timeout: 10s
      retries: 20

  tweet_service:
    build:
      context: ./TweetService
      dockerfile: Dockerfile
    environment:
      PORT: '9092'
    ports:
      - '9092:9092'
    depends_on:
      - cassandra

  cassandra:
    image: cassandra:4.0
    restart: always
    ports:
      - '9042:9042'
    volumes:
      - /home/GolandProjects/cass/:/cass/data
    healthcheck:
      test: echo 'db.runCommand("ping").ok'
      interval: 10s
      timeout: 10s
      retries: 20




